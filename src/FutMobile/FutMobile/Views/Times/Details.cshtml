@model FutMobile.Models.Time

@{
    ViewBag.Title = "Details";
}

<style>
    titulo {
        font-size: 15px;
        font-weight: bolder;
    }
</style>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script>
    window.onload = function () {
        document.getElementById("indice").className = "animation start-quatro";
        $('[id^=esconder_]').hide();
    };

    google.charts.load('current', { packages: ['corechart', 'bar'] });
    google.charts.setOnLoadCallback(drawBasic);

    function drawBasic() {

        var data = google.visualization.arrayToDataTable([
            ['Time', 'Quantidade', { role: 'style' }, { role: 'annotation' }],
            ['Mundial', @Html.DisplayFor(model => model.Mundial), '#23527c', @Html.DisplayFor(model => model.Mundial)],
            ['Libertadores', @Html.DisplayFor(model => model.Libertadores), '#23527c', @Html.DisplayFor(model => model.Libertadores)],
            ['Brasileirão', @Html.DisplayFor(model => model.Brasileiro), '#23527c', @Html.DisplayFor(model => model.Brasileiro)],
            ['Copa do Brasil', @Html.DisplayFor(model => model.CopaDoBrasil), '#23527c', @Html.DisplayFor(model => model.CopaDoBrasil)],
            ['Estadual', @Html.DisplayFor(model => model.Estadual), '#23527c', @Html.DisplayFor(model => model.Estadual)]
        ]);

        var options = {
            width: 700,
            height: 350,
            legend: {
                position: "none"
            },
            title: 'Quantidade de títulos',
            hAxis: {
                gridlines: {
                    color: '#fff'
                }
            },
            vAxis: {
                gridlines: {
                    color: '#fff'
                },
                baseline: 'none',
                textPosition: 'none',
            }
        };

        var chart = new google.visualization.ColumnChart(
            document.getElementById('chart_div'));

        chart.draw(data, options);
    }

</script>



<div class="row">
    <div class="col-md-12" style="text-align:left; padding:10px 10px 15px 0px;">
        <a href="/Times">
            <input type="submit" class="btn btn-fut" style="height:30px; width:30px; padding:0px;" value="Voltar" />
        </a>
    </div>

    <div class="col-md-12 backgroungLogin">
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6" style="text-align:center; font-weight: bolder; font-size: 20px; padding:0px;">
                @Html.DisplayFor(model => model.NomeTime)
            </div>
            <div class="col-md-3" style="text-align: right;">
                @if (User.IsInRole("Administrator"))
                {
                    <div>
                        @Html.ActionLink("Editar", "Edit", new { id = Model.CodigoTime }) |
                        @Html.ActionLink("Deletar", "Delete", new { id = Model.CodigoTime })
                    </div>
                }
                @if (!User.IsInRole("Administrator"))
                {
                    <div>
                        @Html.ActionLink("Sugerir Edição", "Edit", new { id = Model.CodigoTime }) |
                        @Html.ActionLink("Sugerir Deletação", "Delete", new { id = Model.CodigoTime })
                    </div>
                }
            </div>
        </div>

        <div class="col-md-9" style="text-align: justify; padding:0px;">
            <br />
            @{ var resumo = Html.Raw(Model.Resumo);}
            @resumo
            <br /> <br />
        </div>

        <div class="col-md-3" style="text-align: center; font-size: 11px; padding:0px; ">
            <img src="../@Model.BrasaoPath" width="200" height="200">
        </div>

        <div class="col-md-12" style="font-size: 15px; text-align:left; padding:0px; border-top: 2px solid #f0f0f0;">
            <br />
            <div style="font-size:15px; text-align: justify;">
                <titulo>
                    @Html.DisplayNameFor(model => model.Fundacao):
                </titulo>
                @String.Format("{0:dd/MM/yyyy}", Model.Fundacao)
                <br/><br />
                <titulo>
                    @Html.DisplayNameFor(model => model.ResumoTitulos):<br />
                </titulo>
                @{ var resumoTitulos = Html.Raw(Model.ResumoTitulos);}
                @resumoTitulos
            </div>
            <br />
            <div class="col-md-2"></div>
            <div class="col-md-8" style="border: 1px solid #ccc; border-radius:25px;">
                <div id="chart_div"></div>
            </div>
        </div>
    </div>
</div>
